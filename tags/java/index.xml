<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - Tag - Hi, Shihao</title>
        <link>http://miaoshihao.com/tags/java/</link>
        <description>Java - Tag - Hi, Shihao</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>miao.shihaoo@gmail.com (Shihao Miao)</managingEditor>
            <webMaster>miao.shihaoo@gmail.com (Shihao Miao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 23 Oct 2020 10:35:26 &#43;0800</lastBuildDate><atom:link href="http://miaoshihao.com/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Spring Framework Notes - Overview</title>
    <link>http://miaoshihao.com/notes/spring/spring/spring_overview/</link>
    <pubDate>Mon, 20 Jul 2020 22:50:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/spring/spring/spring_overview/</guid>
    <description><![CDATA[ Spring Core  IOC/DI Spring Bean   Spring Web 1.  ]]></description>
</item><item>
    <title>Spring Integration Notes(1) Overview </title>
    <link>http://miaoshihao.com/notes/spring/spring_integration/</link>
    <pubDate>Tue, 01 Oct 2019 22:50:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/spring/spring_integration/</guid>
    <description><![CDATA[Spring Integration Basic Overview Spring Integration is an open source framework that designed to enable the development of integration solutions typical of event-driven architectures and messaging-centric architectures. It requires dependency spring intergration core, which could be downloaded from Maven Central.
1 2 3 4 5  &lt;dependency&gt; &lt;groupId&gt;org.springframework.integration&lt;/groupId&gt; &lt;artifactId&gt;spring-integration-core&lt;/artifactId&gt; &lt;version&gt;5.3.1.RELEASE&lt;/version&gt; &lt;/dependency&gt;   Spring integration framework consists three parts, namely message, message channel, and message endpoint. In general. a message is a unit of information that can be passed between different message endpoint through message channels.]]></description>
</item><item>
    <title>Java Notes(1) Keywords</title>
    <link>http://miaoshihao.com/notes/java/java_key_words/</link>
    <pubDate>Wed, 12 Jun 2019 15:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/java/java_key_words/</guid>
    <description><![CDATA[All 48 Java Keywords with Examples Table below lists 48 Keywords in Java.
1) abstract abstract keyword is used to implement the abstraction in java. A method which doesn’t have method definition must be declared as abstract and the class containing it must be declared as abstract. You can’t instantiate abstract classes. Abstract methods must be implemented in the sub classes. You can’t use abstract keyword with variables and constructors.]]></description>
</item><item>
    <title>Spring Framework Notes - Beans, BeanFactory and the ApplicationContext</title>
    <link>http://miaoshihao.com/notes/spring/spring/spring_bean/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/spring/spring/spring_bean/</guid>
    <description><![CDATA[Bean Bean represents as an objects in Java. Bean need to contain the following points:
The Bean class The class attribute in bean is normally mandatory. The creation of bean object is through BeanFactory. It has three approaches.
The first approach is where the BeanFactory itself directly creates the bean by calling its constructor (equivalent to Java code calling new), the class attribute specifies the class of the bean to be constructed.]]></description>
</item><item>
    <title>Spring Framework Notes - IOC/DI</title>
    <link>http://miaoshihao.com/notes/spring/spring/ioc_and_di/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/spring/spring/ioc_and_di/</guid>
    <description><![CDATA[Inverse of Control (IOC) and Dependency Injection Dependency Injection (DI) and inversion of Control are a design pattern. It allows the creation of dependent objects outside of a class and provides those objects to a class through different ways.
The basic principle is that beans define their dependencies (i.e. the other objects they work with) only through constructor arguments, arguments to a factory method, or properties which are set on the object instance after it has been constructed or returned from a factory method.]]></description>
</item><item>
    <title>Java Notes(2) Feature and Program Execution</title>
    <link>http://miaoshihao.com/notes/java/java_feature_execution/</link>
    <pubDate>Thu, 13 Jun 2019 16:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/java/java_feature_execution/</guid>
    <description><![CDATA[Java Features and Program Execution Java is a programming language and a platform.
Platform: Any hardware or software environment in which a program runs, is known as a platform. Since Java has its own runtime environment (JRE) and Application Programming Interface (API), it is called platform.
Features of Java :   Simple:
 User friendly syntax based on C++ It has Automatic Garbage Collection It has Rich set of APIs Removed confusing features - explicit pointers, operator overloading, multiple inheritance, etc    Object-oriented:]]></description>
</item><item>
    <title>Java Notes(3) Java Fundamentals</title>
    <link>http://miaoshihao.com/notes/java/java_fundamentals/</link>
    <pubDate>Sat, 15 Jun 2019 15:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/java/java_fundamentals/</guid>
    <description><![CDATA[Data Types in Java  Data Type Default Value Default size   boolean false 1 bit   char '\u0000' 2 byte   byte 0 1 byte   short 0 2 byte   int 0 4 byte   long 0L 8 byte   float 0.0f 4 byte   double 0.0d 8 byte   Data Type Promotion in Java : Wrapper Classes in Java In Java, there is a wrapper class.]]></description>
</item><item>
    <title>Java Notes(14) Multithreading</title>
    <link>http://miaoshihao.com/notes/java/java_multithreading/</link>
    <pubDate>Tue, 06 Aug 2019 05:11:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/java/java_multithreading/</guid>
    <description><![CDATA[Multithreading in java is a process of executing multiple threads simultaneously. Thread is basically a lightweight sub-process, a smallest unit of processing. Multiprocessing and multithreading, both are used to achieve multitasking.
But we use multithreading than multiprocessing because threads share a common memory area. They don&rsquo;t allocate separate memory area so saves memory, and context-switching between the threads takes less time than process.
Thread is executed inside the process. There is context-switching between the threads.]]></description>
</item><item>
    <title>Java Notes(13) Networking</title>
    <link>http://miaoshihao.com/notes/java/java_networking/</link>
    <pubDate>Fri, 02 Aug 2019 22:00:16 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/java/java_networking/</guid>
    <description><![CDATA[Java Networking is a concept of connecting two or more computing devices together so that we can share resources.
Java Socket Programming provides facility to share data between different computing devices.
Advantage of Java Networking :
 sharing resources centralized software management  Java Networking Terminology : Some of the widely used java networking terminologies are as follows:
  IP Address
 IP address is a unique number assigned to a node of a network e.]]></description>
</item><item>
    <title>Java Notes(12) Serialization</title>
    <link>http://miaoshihao.com/notes/java/java_serialization/</link>
    <pubDate>Tue, 30 Jul 2019 15:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/java/java_serialization/</guid>
    <description><![CDATA[Serialization in java is a mechanism of writing the state of an object into a byte stream. It is mainly used in Hibernate, RMI, JPA, EJB and JMS technologies. The reverse operation of serialization is called deserialization.
Advantage of Java Serialization : It is mainly used to travel object&rsquo;s state on the network (known as marshaling).
java.io.Serializable interface : Serializable is a marker interface (has no data member and method). It is used to &ldquo;mark&rdquo; java classes so that objects of these classes may get certain capability.]]></description>
</item></channel>
</rss>
