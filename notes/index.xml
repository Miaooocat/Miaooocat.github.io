<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All notes - Hi, Shihao</title>
        <link>http://miaoshihao.com/notes/</link>
        <description>All notes | Hi, Shihao</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>miao.shihaoo@gmail.com (Shihao Miao)</managingEditor>
            <webMaster>miao.shihaoo@gmail.com (Shihao Miao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 27 May 2021 22:50:26 &#43;0800</lastBuildDate><atom:link href="http://miaoshihao.com/notes/" rel="self" type="application/rss+xml" /><item>
    <title>Tree Notes </title>
    <link>http://miaoshihao.com/notes/computerscience/algorithm_datastructure/tree/</link>
    <pubDate>Thu, 27 May 2021 22:50:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/algorithm_datastructure/tree/</guid>
    <description><![CDATA[Tree Introduction Trees consist of vertices (nodes) and edges that connect them. It has no cycle, and is hierarchical.
Binary Tree Structure 1 2 3 4 5 6 7 8 9 10 11 12  public class BinaryTreeNode { int val; BinaryTreeNode left; BinaryTreeNode right; BinaryTreeNode() {} BinaryTreeNode(int val) { this.val = val; } BinaryTreeNode(int val, BinaryTreeNode left, BinaryTreeNode right) { this.val = val; this.left = left; this.right = right; } }   Preorder traversal https://leetcode.]]></description>
</item><item>
    <title>JVM Object Initializaton</title>
    <link>http://miaoshihao.com/notes/computerscience/language/java/advancejava/jvm/jvm_intro/</link>
    <pubDate>Mon, 03 May 2021 20:51:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/java/advancejava/jvm/jvm_intro/</guid>
    <description><![CDATA[Lifetime of a Type This note discusses how JVM create a object type from class file. It has three stages, namely, loading, linking and Initialization.
Loading Class loading is a process to create java.lang.Class, which stores the corresponding class information of a type.
java.lang.Class java.lang.Class class instance represent classes, interfaces, primitives, void, and arrays in a running Java application. It has no public constructor.
Class object contains meta-information about class.]]></description>
</item><item>
    <title>Javascript Notes 1 Intro</title>
    <link>http://miaoshihao.com/notes/computerscience/language/javascript/javascript_notes_1_intro/</link>
    <pubDate>Fri, 15 Jan 2021 11:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/javascript/javascript_notes_1_intro/</guid>
    <description><![CDATA[History of JavaScript  LiveScript -&gt; JavaScript ECMAScript (ES5, ES6)  ECMAScript (ES) is a scripting-language specification standardized by Ecma International. It was created to standardize JavaScript. JavaScript has remained the best-known implementation of ECMAScript.   ECMAScript (ES2016, ES2017)  HTML, CSS vs JavaScript  HTML and CSS  Markup language used to describe and define elements within a document.   JavaScript  Programming language used to communicate instructions to a machine.]]></description>
</item><item>
    <title>Network</title>
    <link>http://miaoshihao.com/notes/computerscience/internet/network/network_overview/</link>
    <pubDate>Fri, 11 Dec 2020 19:32:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/internet/network/network_overview/</guid>
    <description><![CDATA[OSI Model The Open Systems Interconnection (OSI) model is a conceptual model created by the International Organization for Standardization which enables diverse communication systems to communicate using standard protocols.
 Layer Protocol data unit (PDU) Function   Application (应用层) Data High-level APIs, including resource sharing, remote file access, ex: HTTP, HTTPS,FTP,SSH and etc..   Presentation (表示层) Data Translation of data between a networking service and an application; including character encoding, data compression and encryption/decryption   Session(会话层) Data Managing communication sessions, i.]]></description>
</item><item>
    <title>Difference in Spring and Spring Boot</title>
    <link>http://miaoshihao.com/notes/computerscience/backend/spring/springboot/</link>
    <pubDate>Thu, 20 Aug 2020 22:50:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/backend/spring/springboot/</guid>
    <description><![CDATA[Spring Boot is an extension of the Spring framework which eliminated the boilerplate configurations required for setting up a Spring application. This notes highlight the difference between Spring Boot and Spring.
Maven Dependencies Spring looks minimum dependencies required to create an web application.
1 2 3 4 5 6 7 8 9 10  &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;5.2.9.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;5.2.9.RELEASE&lt;/version&gt; &lt;/dependency&gt;   Spring Boot requires only one dependency:]]></description>
</item><item>
    <title>Spring Framework Notes - Overview</title>
    <link>http://miaoshihao.com/notes/computerscience/backend/spring/spring/spring_overview/</link>
    <pubDate>Mon, 20 Jul 2020 22:50:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/backend/spring/spring/spring_overview/</guid>
    <description><![CDATA[Spring  Notes]]></description>
</item><item>
    <title>Beneish Model</title>
    <link>http://miaoshihao.com/notes/finance/investment/beneish_model/</link>
    <pubDate>Fri, 17 Jul 2020 19:32:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/finance/investment/beneish_model/</guid>
    <description><![CDATA[The Beneish model is a mathematical model that uses financial ratios and eight variables to identify whether a company has manipulated its earnings. It is used as a tool to uncover potential financial fraud. However, the result generated from beneish model can not be the evidence.
The variables are constructed from the data in the company&rsquo;s financial statements, and once calculated, create an M-Score to describe the degree to which the earnings have been manipulated.]]></description>
</item><item>
    <title>Message-Oriented Middleware</title>
    <link>http://miaoshihao.com/notes/computerscience/backend/messagequeue/ibm_mq/</link>
    <pubDate>Fri, 10 Jul 2020 09:50:16 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/backend/messagequeue/ibm_mq/</guid>
    <description><![CDATA[Message Middleware Intro Message Oriented Middleware is a concept that involves the passing of data between applications using a communication channel that carries self-contained units of information (messages).
Message Middleware Option Information transfer between different application can be achieved in many different ways, but most efficient solution so far (2021) is with Message Queue.
Message Queue A message queue provides an asynchronous communications protocol, which is a system that puts a message onto a message queue and does not require an immediate response to continuing processing.]]></description>
</item><item>
    <title>Message-Oriented Middleware</title>
    <link>http://miaoshihao.com/notes/computerscience/backend/messagequeue/message_oriented-middleware/</link>
    <pubDate>Fri, 10 Jul 2020 09:50:16 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/backend/messagequeue/message_oriented-middleware/</guid>
    <description><![CDATA[Message Middleware Intro Message Oriented Middleware is a concept that involves the passing of data between applications using a communication channel that carries self-contained units of information (messages).
Message Middleware Option Information transfer between different application can be achieved in many different ways, but most efficient solution so far (2021) is with Message Queue.
Message Queue A message queue provides an asynchronous communications protocol, which is a system that puts a message onto a message queue and does not require an immediate response to continuing processing.]]></description>
</item><item>
    <title>Java8 Stream </title>
    <link>http://miaoshihao.com/notes/computerscience/language/java/basicjava/java8_notes_stream/</link>
    <pubDate>Wed, 02 Oct 2019 20:50:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/java/basicjava/java8_notes_stream/</guid>
    <description><![CDATA[A stream represents a sequence of elements and supports different kind of operations to perform computations upon those elements:
1 2 3 4 5 6 7 8 9  List&lt;String&gt; myList = Arrays.asList(&#34;a1&#34;, &#34;a2&#34;, &#34;b1&#34;, &#34;c2&#34;, &#34;c1&#34;); myList .stream() .filter(s -&gt; s.startsWith(&#34;c&#34;)) .map(String::toUpperCase) .sorted() .forEach(System.out::println);   Stream Creation Calling the method stream() on a list of objects returns a regular object stream.
1 2 3 4  Arrays.asList(&#34;a1&#34;, &#34;a2&#34;, &#34;a3&#34;) .]]></description>
</item></channel>
</rss>
