<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All notes - Hi, Shihao</title>
        <link>http://miaoshihao.com/notes/</link>
        <description>All notes | Hi, Shihao</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>miao.shihaoo@gmail.com (Shihao Miao)</managingEditor>
            <webMaster>miao.shihaoo@gmail.com (Shihao Miao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 15 Jan 2021 11:58:26 &#43;0800</lastBuildDate><atom:link href="http://miaoshihao.com/notes/" rel="self" type="application/rss+xml" /><item>
    <title>Javascript Notes 1 Intro</title>
    <link>http://miaoshihao.com/notes/computerscience/language/javascript/javascript_notes_1_intro/</link>
    <pubDate>Fri, 15 Jan 2021 11:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/javascript/javascript_notes_1_intro/</guid>
    <description><![CDATA[History of JavaScript  LiveScript -&gt; JavaScript ECMAScript (ES5, ES6)  ECMAScript (ES) is a scripting-language specification standardized by Ecma International. It was created to standardize JavaScript. JavaScript has remained the best-known implementation of ECMAScript.   ECMAScript (ES2016, ES2017)  HTML, CSS vs JavaScript  HTML and CSS  Markup language used to describe and define elements within a document.   JavaScript  Programming language used to communicate instructions to a machine.]]></description>
</item><item>
    <title>Network</title>
    <link>http://miaoshihao.com/notes/computerscience/middleware/network/network_overview/</link>
    <pubDate>Fri, 11 Dec 2020 19:32:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/middleware/network/network_overview/</guid>
    <description><![CDATA[OSI Model The Open Systems Interconnection (OSI) model is a conceptual model created by the International Organization for Standardization which enables diverse communication systems to communicate using standard protocols.
 Layer Protocol data unit (PDU) Function   Application (应用层) Data High-level APIs, including resource sharing, remote file access, ex: HTTP, HTTPS,FTP,SSH and etc..   Presentation (表示层) Data Translation of data between a networking service and an application; including character encoding, data compression and encryption/decryption   Session(会话层) Data Managing communication sessions, i.]]></description>
</item><item>
    <title>Spring Framework Notes - Overview</title>
    <link>http://miaoshihao.com/notes/computerscience/framework/spring/spring/spring_overview/</link>
    <pubDate>Mon, 20 Jul 2020 22:50:21 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/framework/spring/spring/spring_overview/</guid>
    <description><![CDATA[ Spring Core  IOC/DI Spring Bean   Spring Web 1.  ]]></description>
</item><item>
    <title>Beneish Model</title>
    <link>http://miaoshihao.com/notes/finance/investment/beneish_model/</link>
    <pubDate>Fri, 17 Jul 2020 19:32:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/finance/investment/beneish_model/</guid>
    <description><![CDATA[The Beneish model is a mathematical model that uses financial ratios and eight variables to identify whether a company has manipulated its earnings. It is used as a tool to uncover potential financial fraud. However, the result generated from beneish model can not be the evidence.
The variables are constructed from the data in the company&rsquo;s financial statements, and once calculated, create an M-Score to describe the degree to which the earnings have been manipulated.]]></description>
</item><item>
    <title>Java8 Stream </title>
    <link>http://miaoshihao.com/notes/computerscience/language/java/java8_notes_stream/</link>
    <pubDate>Wed, 02 Oct 2019 20:50:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/java/java8_notes_stream/</guid>
    <description><![CDATA[A stream represents a sequence of elements and supports different kind of operations to perform computations upon those elements:
1 2 3 4 5 6 7 8 9  List&lt;String&gt; myList = Arrays.asList(&#34;a1&#34;, &#34;a2&#34;, &#34;b1&#34;, &#34;c2&#34;, &#34;c1&#34;); myList .stream() .filter(s -&gt; s.startsWith(&#34;c&#34;)) .map(String::toUpperCase) .sorted() .forEach(System.out::println);   Stream Creation Calling the method stream() on a list of objects returns a regular object stream.
1 2 3 4  Arrays.asList(&#34;a1&#34;, &#34;a2&#34;, &#34;a3&#34;) .]]></description>
</item><item>
    <title>Spring Integration Notes(1) Overview </title>
    <link>http://miaoshihao.com/notes/computerscience/framework/spring/spring_integration/</link>
    <pubDate>Tue, 01 Oct 2019 22:50:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/framework/spring/spring_integration/</guid>
    <description><![CDATA[Spring Integration Basic Overview Spring Integration is an open source framework that designed to enable the development of integration solutions typical of event-driven architectures and messaging-centric architectures. It requires dependency spring intergration core, which could be downloaded from Maven Central.
1 2 3 4 5  &lt;dependency&gt; &lt;groupId&gt;org.springframework.integration&lt;/groupId&gt; &lt;artifactId&gt;spring-integration-core&lt;/artifactId&gt; &lt;version&gt;5.3.1.RELEASE&lt;/version&gt; &lt;/dependency&gt;   Spring integration framework consists three parts, namely message, message channel, and message endpoint. In general. a message is a unit of information that can be passed between different message endpoint through message channels.]]></description>
</item><item>
    <title>Java8 Optional class</title>
    <link>http://miaoshihao.com/notes/computerscience/language/java/java8_notes_option/</link>
    <pubDate>Sat, 28 Sep 2019 20:50:46 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/java/java8_notes_option/</guid>
    <description><![CDATA[Optional class is a container for null.
Optional class Declartion 1 2  public final class Optional&lt;T&gt; extends Object   Optional class method  Return an empty option class  1  static &lt;T&gt; Optional&lt;T&gt; empty()   Example:
1 2 3 4 5  @Test public void whenCreatesEmptyOptional_thenCorrect() { Optional&lt;String&gt; empty = Optional.empty(); assertFalse(empty.isPresent()); }   判断其他对象是否等于Optional  1  boolean equals(Object obj)   optionObject.filter()  Filter takes a predicate as an argument and returns an Optional object.]]></description>
</item><item>
    <title>Technical Indicator</title>
    <link>http://miaoshihao.com/notes/finance/investment/technicalindicator/</link>
    <pubDate>Sat, 29 Jun 2019 19:32:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/finance/investment/technicalindicator/</guid>
    <description><![CDATA[Accumulation/Distribution Line (ADL)  The accumulation/distribution line gauges supply and demand by looking at where the price closed within the period&rsquo;s range, and then multiplying that by volume. The A/D indicator is cumulative, meaning one period&rsquo;s value is added or subtracted from the last. A rising A/D line helps confirm a rising price trend. A falling A/D line helps confirm a price downtrend. If the price is rising but A/D is falling, it signals underlying weakness and a potential decline in price.]]></description>
</item><item>
    <title>Java Notes(1) Introduction</title>
    <link>http://miaoshihao.com/notes/computerscience/language/java/java_notes_1_introduction/</link>
    <pubDate>Thu, 13 Jun 2019 16:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/language/java/java_notes_1_introduction/</guid>
    <description><![CDATA[Java Features and Program Execution Java is a programming language and a platform.
Platform: Any hardware or software environment in which a program runs, is known as a platform. Since Java has its own runtime environment (JRE) and Application Programming Interface (API), it is called platform.
Features of Java :   Simple:
 User friendly syntax based on C++ It has Automatic Garbage Collection It has Rich set of APIs Removed confusing features - explicit pointers, operator overloading, multiple inheritance, etc    Object-oriented:]]></description>
</item><item>
    <title>Spring Framework Notes - Beans, BeanFactory and the ApplicationContext</title>
    <link>http://miaoshihao.com/notes/computerscience/framework/spring/spring/spring_bean/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/computerscience/framework/spring/spring/spring_bean/</guid>
    <description><![CDATA[Bean Bean represents as an objects in Java. Bean need to contain the following points:
The Bean class The class attribute in bean is normally mandatory. The creation of bean object is through BeanFactory. It has three approaches.
The first approach is where the BeanFactory itself directly creates the bean by calling its constructor (equivalent to Java code calling new), the class attribute specifies the class of the bean to be constructed.]]></description>
</item></channel>
</rss>
