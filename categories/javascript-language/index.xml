<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Javascript Language - Category - Hi, Shihao</title>
        <link>http://miaoshihao.com/categories/javascript-language/</link>
        <description>Javascript Language - Category - Hi, Shihao</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>miao.shihaoo@gmail.com (Shihao Miao)</managingEditor>
            <webMaster>miao.shihaoo@gmail.com (Shihao Miao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 18 Aug 2020 11:58:26 &#43;0800</lastBuildDate><atom:link href="http://miaoshihao.com/categories/javascript-language/" rel="self" type="application/rss+xml" /><item>
    <title>Javascript Study Notes</title>
    <link>http://miaoshihao.com/notes/knowledge/science/computer_science/language/javascript/javascriptstudynotes/</link>
    <pubDate>Tue, 18 Aug 2020 11:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://miaoshihao.com/notes/knowledge/science/computer_science/language/javascript/javascriptstudynotes/</guid>
    <description><![CDATA[Overview 1.1 Use external JavaScript 1 2 3 4 5  &lt;html&gt; &lt;head&gt; &lt;script type=&#34;text/javascript&#34; src=&#34;xxx.js&#34;&gt; &lt;/script&gt; &lt;/head&gt; &lt;/html&gt;   1.2. Variable and Operators Variables var declarations are globally scoped or function scoped while let and const are block scoped. var variables can be updated and re-declared within its scope; let variables can be updated but not re-declared; const variables can neither be updated nor re-declared.
1 2 3 4  x=5; var x=5; let x=5; const x = 5;   Arithmetic Operators: 1  +, -, *, /, % (modulus), ++, --   Assignment Operators: 1  =, +=, -=, *=, /=, %=   String addition 1 2  x = &#34;5&#34; + &#34;5&#34; // result is &#34;55&#34;  x = 5 + &#34;5&#34; // result is still &#34;55&#34;   Comparison operators 1 2 3 4 5 6 7  == // equal to  === // exactly equal to (value and type)  !]]></description>
</item></channel>
</rss>
